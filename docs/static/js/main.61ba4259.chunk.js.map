{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GrifGridItem.js","components/GifGrid.js","hooks/useFechtGif.js","GitExpertApp.js","index.js"],"names":["AddCategory","props","setCategories","useState","inputValue","setImputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","handleInpuntChange","getGif","categorie","a","URL","encodeURI","fetch","response","json","data","gits","map","img","id","title","url","images","downsized_medium","GrifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","item","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iMAmCeA,EA7BK,SAAAC,GAClB,IAAQC,EAAkBD,EAAlBC,cACR,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACE,sBAAMC,SARa,SAAAC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAIhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAAAP,GAAC,OAhBU,SAAAA,GACzB,IAAMM,EAAQN,EAAEQ,OAAOF,MACvBR,EAAcQ,GAcKG,CAAmBT,S,+BCvB7BU,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UACpDH,GAFkB,+DAIGI,MAAMF,GAJT,cAIdG,EAJc,gBAKGA,EAASC,OALZ,uBAKZC,EALY,EAKZA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAVlB,kBAabL,GAba,4CAAH,sDCWJQ,MATf,YAA2C,IAAnBJ,EAAkB,EAAlBA,MAAWC,GAAO,EAAXF,GAAW,EAAPE,KACjC,OACE,sBAAKI,UAAU,0CAAf,UACE,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCcKQ,EAjBC,SAAC,GAAmB,IAAjBpB,EAAgB,EAAhBA,UACjB,ECF0B,SAAAA,GAC1B,MAA0Bf,mBAAS,CACjCsB,KAAM,GACNc,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAQA,OAHAC,qBAAU,WACRzB,EAAOC,GAAWyB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CAAEhB,KAAMmB,EAAML,SAAS,SAC9D,CAACrB,IACGsB,EDP2BK,CAAa3B,GAAjCc,EAAd,EAAQP,KAAcc,EAAtB,EAAsBA,QACtB,OACE,qCACE,6BAAKrB,IACJqB,GACC,mBAAGJ,UAAU,mCAAb,yBAEF,qBAAKA,UAAU,YAAf,SACGH,EAAOL,KAAI,SAAAmB,GACV,OAAO,cAAC,EAAD,eAAgCA,GAAbA,EAAKjB,aEQ1BkB,EAjBM,SAAA9C,GACnB,MAAoCE,mBAAS,CAAC,KAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEA,OACE,qCACE,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACG8C,EAAWrB,KAAI,SAAAT,GAAS,OACvB,cAAC,EAAD,CAAyBA,UAAWA,GAAtBA,YCVxB+B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.61ba4259.chunk.js","sourcesContent":["/** @format */\r\n\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = props => {\r\n  const { setCategories } = props;\r\n  const [inputValue, setImputValue] = useState('');\r\n  const handleInpuntChange = e => {\r\n    const value = e.target.value;\r\n    setImputValue(value);\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories(cats => [inputValue, ...cats]);\r\n      setImputValue('');\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type='text'\r\n        value={inputValue}\r\n        onChange={e => handleInpuntChange(e)}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","/** @format */\r\n\r\nexport const getGif = async categorie => {\r\n  const URL = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    categorie\r\n  )}&limit=10&api_key=CLEQp1OaLyKEL2wt6kbI1HFY1ZSFZlMp`;\r\n  const response = await fetch(URL);\r\n  const { data } = await response.json();\r\n  const gits = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gits;\r\n};\r\n","/** @format */\r\n\r\nimport React from 'react';\r\n\r\nfunction GrifGridItem({ title, id, url }) {\r\n  return (\r\n    <div className='cards animate__animated animate__bounce'>\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GrifGridItem;\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFechtGif';\r\nimport GrifGridItem from '../components/GrifGridItem';\r\nconst GifGrid = ({ categorie }) => {\r\n  const { data: images, loading } = useFetchGifs(categorie);\r\n  return (\r\n    <>\r\n      <h3>{categorie}</h3>\r\n      {loading && (\r\n        <p className='animate__animated animate__flash'>Cargando...</p>\r\n      )}\r\n      <div className='card-grid'>\r\n        {images.map(item => {\r\n          return <GrifGridItem key={item.id} {...item} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","/** @format */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { getGif } from '../helpers/getGifs';\r\nexport const useFetchGifs = categorie => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGif(categorie).then(imgs => setstate({ data: imgs, loading: false }));\r\n  }, [categorie]);\r\n  return state;\r\n};\r\n","/** @format */\r\n\r\nimport React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GitExpertApp = props => {\r\n  const [categories, setCategories] = useState(['']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GIF Expert App</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map(categorie => (\r\n          <GifGrid key={categorie} categorie={categorie} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GitExpertApp;\r\n","/** @format */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GitExpertApp from './GitExpertApp';\nReactDOM.render(<GitExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}